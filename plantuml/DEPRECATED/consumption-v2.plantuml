@startuml
title Consumption dependencies between CPPEs

class CustomerPurchasePackage
class CustomerPurchasePackageElement
class CustomerPurchasePackageElementAccess
CustomerPurchasePackage "1" *-- "1..n" CustomerPurchasePackageElement: "customerPurchasePackageElements"
CustomerPurchasePackageElement "1" *-- "0..n" CustomerPurchasePackageElementAccess: "elementAccesses"

note top of ConsumptionUtilisationDependency
Describes a dependency that one or more CustomerPurchasePackageElementAccess 
for a given CustomerPurchasePackageElement must be in the state defined by MarkedAs 
in order for elements listed in ConsumptionUtilisation to proceed state changes 
(defined inside the corresponding CPPE) 
end note
class ConsumptionUtilisationDependency #lightblue
CustomerPurchasePackage "1" *-- "0..n" ConsumptionUtilisationDependency: "consumptionUtilisationDependencies"

note bottom of ConsumptionDependency
Defines the state the corresponding 
CustomerPurchasePackageElementAccess 
must be in in order for dependency to be satisfied
end note
class ConsumptionDependency #lightblue
ConsumptionUtilisationDependency "1" *-- "0..n" ConsumptionDependency: "consumptionDependencies"
ConsumptionUtilisationDependency *--  MaximumNumberOfAccesses: "maximumNumberOfAccesses"
ConsumptionUtilisationDependency "1" *-- "0..n" ConsumptionUtilisation: "consumptionUtilisations"
ConsumptionUtilisationDependency *--  LogicalOperatorEnumeration: "consumptionDependenciesGrouping"
ConsumptionUtilisationDependency *--  LogicalOperatorEnumeration: "consumptionUtilisationGrouping"
ConsumptionUtilisationDependency *--  ConsumptionTransitionPolicy: "transitionPolicy"


note right of ConsumptionUtilisation
The CPPE that is affected when 
dependency is satisfied
end note
class ConsumptionUtilisation #lightblue
ConsumptionUtilisation "1" --> "1" CustomerPurchasePackageElement: "cppe in question"
ConsumptionDependency "1" --> "1" CustomerPurchasePackageElement: "cppe in question"
ConsumptionDependency "1" --> "1" MarkedAs: "markedAs status"
ConsumptionDependency  .. CustomerPurchasePackageElementAccess: "element access in state"

note top of MaximumNumberOfAccesses
Maximum number the CPPE can be transitioned
Overall value for all listed ConsumptionUtilisation
end note
class MaximumNumberOfAccesses #lightblue {
 -integer value 
}
note bottom of MaximumNumberOfAccessesType
Either limited with a given value
or unlimited
end note
enum MaximumNumberOfAccessesType #lightblue {
 -limited
 -unlimited
}
MaximumNumberOfAccesses *--  MaximumNumberOfAccessesType: "type"


enum MarkedAs {
 -unused
 -activated
 -used
 -marked
 -expired
}

enum LogicalOperatorEnumeration {
 -AND
 -OR
 -XOR
 -NOT
 -NAND
 -NOR
 -XNOR
}

note bottom of ConsumptionTransitionPolicy
Shall the coresponding CPPE referred to in ConsumptionUtilisation
be transitioned automatically (according to CPPE parameters)
or manually at the convenience of the traveller/external system
end note
enum ConsumptionTransitionPolicy #lightblue{
 -manual
 -automatic
}

@enduml
